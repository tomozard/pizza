{"version":3,"sources":["store/reducers/productReducer.ts","store/reducers/cartReducer.ts","store/reducers/index.ts","store/store.ts","hooks/useApi.ts","services/api/api.ts","services/api/productApi.ts","store/actions/cartActions.ts","components/product/list.tsx","components/product/index.tsx","components/cart/list.tsx","components/cart/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialProductState","fetching","products","productReducer","state","action","type","error","initialCartState","cartReducer","hasInCart","_","find","c","product","_id","payload","amount","filterState","filter","item","addState","removeState","hasUpdate","updateState","rootReducer","combineReducers","carts","store","applyMiddleware","reduxThunk","createStore","createStoreWithMiddleware","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","UseApi","method","params","autofetch","useState","data","setData","loading","setLoading","setError","fetchData","a","useEffect","baseAxios","axios","create","baseURL","api","post","url","config","get","productApi","getProduct","updateCarts","useStyles","makeStyles","root","maxWidth","media","height","backgroundSize","floatRight","marginLeft","List","props","classes","dispatch","useDispatch","addToCart","id","Date","getTime","addCarts","Card","className","CardActionArea","Grid","container","xs","md","CardMedia","image","image_th","title","imagealt_th","CardContent","Typography","component","product_name_th","text","product_detail_th","maxLine","ellipsis","trimRight","basedOn","variant","price","CardActions","Button","size","color","onClick","Index","useApi","gutterBottom","spacing","map","index","sm","product_id","myCartButton","minWidth","myRemoveButton","cart","Divider","orientation","flexItem","useSelector","console","log","length","orderBy","App","Container","style","padding","borderRight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ee4a50f.chunk.js","sourcesContent":["import { Reducer } from 'react'\nimport { productActions } from '../actions/productActions'\nimport { IProduct } from '../../interfaces'\nimport { AxiosError } from 'axios'\n\ninterface IProductState {\n\tfetching: boolean\n\tproducts?: IProduct[]\n\terror?: AxiosError| null\n}\n\nconst initialProductState = {\n\tfetching: false,\n\tproducts: []\n}\n\nconst productReducer: Reducer<IProductState, productActions> = (\n\tstate = initialProductState,\n\taction\n) => {\n\tswitch (action.type) {\n\t\tcase 'FETCH_PRODUCT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfetching: true,\n\t\t\t\terror: null\n\t\t\t} as IProductState\n\t\tcase 'FETCH_PRODUCT_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfetching: false,\n\t\t\t\tproducts: action.products\n\t\t\t} as IProductState\n\t\tcase 'FETCH_PRODUCT_ERROR':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfetching: false,\n\t\t\t\terror: action.error\n\t\t\t} as IProductState\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default productReducer\n","import { ICart } from \"../../interfaces\";\nimport _ from \"lodash\";\n\ninterface ICartState {\n  carts?: ICart[];\n}\n\nconst initialCartState: ICart[] = [];\n\nconst cartReducer = (state: ICart[] = initialCartState, action: any) => {\n  switch (action.type) {\n    case \"ADD_CART\":\n      const hasInCart = _.find(state, function (c) {\n        return c.product._id === action.payload.product._id;\n      });\n      if (hasInCart) {\n        hasInCart.amount++;\n        const filterState = state.filter((item) => item.product._id !== action.payload.product._id);\n        const addState = [...(filterState || []), hasInCart];\n        return addState;\n      } else {\n        const addState = [...(state || []), action.payload];\n        return addState;\n      }\n    case \"REMOVE_CART\":\n      const removeState = state.filter(\n        (item) => item.product._id !== action.payload.product._id\n      );\n      return removeState;\n    case \"UPDATE_CART\":\n      const hasUpdate = _.find(state, function (c) {\n        return c.product._id === action.payload.product._id;\n      });\n      if (hasUpdate) {\n        const filterState = state.filter((item) => item.product._id !== action.payload.product._id);\n        const updateState = [...(filterState || []), hasUpdate];\n        return updateState;\n      }else{\n        return state;\n      }\n    case \"CLEAR_CART\":\n      return [];\n    case \"GET_CART\":\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n","import { combineReducers } from 'redux'\nimport productReducer from './productReducer'\nimport cartReducer from './cartReducer'\n\nconst rootReducer = combineReducers({\n\tproducts: productReducer,\n\tcarts: cartReducer\n})\n\n// Note that we do not have to explicitly declare a new interface for AppState.\n// We can use ReturnType to infer state shape from the rootReducer.\nexport type IAppState = ReturnType<typeof rootReducer>\nexport default rootReducer\n","import { Store, createStore, applyMiddleware } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport { ICart, IProduct } from \"../interfaces\";\nimport reducers from \"./reducers\";\n\nexport type AppState = {\n  carts: ICart[];\n  product: IProduct[];\n};\n\nconst createStoreWithMiddleware = applyMiddleware(reduxThunk)(createStore);\n\n// Connect chrome dev tools extension for debugging\nconst store: Store = createStoreWithMiddleware(\n  reducers,\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;","import { useState, useEffect } from \"react\";\nimport { IProduct } from \"../interfaces\";\n\nconst UseApi = (\n  method: Function,\n  params: any[],\n  autofetch: boolean = true\n): [IProduct[], boolean, boolean, () => void] => {\n  const [data, setData] = useState<IProduct[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setData(await method(...params));\n    } catch (e) {\n      setError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (autofetch) {\n      fetchData();\n    }\n  }, []);\n\n  return [data, loading, error, fetchData];\n};\n\nexport default UseApi;\n","import axios from 'axios'\n\nconst baseAxios = axios.create({\n\tbaseURL: 'https://test.pizzahut1150.com/api/'\n})\n\nconst api = (() => {\n\tconst post = (url: any, data: any, config: any) => baseAxios.post(url, data, config)\n\n\tconst get = (url: any, config?: any) => baseAxios.get(url, config)\n\n\treturn {\n\t\tpost,\n\t\tget\n\t}\n})()\n\nexport default api\n","import api from './api'\nimport { IProduct } from '../../interfaces'\n\nconst getProduct = async (): Promise<IProduct[]> => {\n\tconst url: string = '/products/'\n\n\tconst { data } = await api.get(url)\n\tconst products: IProduct[] = data\n\n\treturn products\n}\n\nconst productApi = {\n\tgetProduct\n}\n\nexport default productApi\n","import { ICart, IProduct } from \"../../interfaces\";\n\nexport const addCarts = (product: IProduct) => {\n  return {\n    type: \"ADD_CART\",\n    payload: { product, amount: 1 , id: new Date().getTime() } as ICart,\n  };\n};\n\nexport const removeCarts = (product: IProduct) => {\n  return {\n    type: \"REMOVE_CART\",\n    payload: { product } as ICart,\n  };\n};\n\nexport const updateCarts = (product: IProduct) => {\n  return {\n    type: \"UPDATE_CART\",\n    payload: { product } as ICart,\n  };\n};\n\nexport const clearCarts = () => {\n    return {\n      type: \"UPDATE_CART\",\n      payload: {}\n    };\n  };\n\n\nexport const getCarts = () => {\n    return {\n      type: \"GET_CART\",\n      payload: {}\n    };\n  };","// React\nimport React from \"react\";\n// Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { IProduct } from \"../../interfaces\";\nimport { Grid } from \"@material-ui/core\";\nimport LinesEllipsis from \"react-lines-ellipsis\";\nimport { Provider, useSelector, useDispatch } from \"react-redux\";\nimport { addCarts } from \"../../store/actions/cartActions\";\n\ninterface Props {\n  product: IProduct;\n}\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n    backgroundSize: \"contain\",\n  },\n  floatRight: {\n    marginLeft: \"auto\",\n  },\n});\n\nconst List = (props: Props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const product = props.product;\n\n  const addToCart = () => {\n    dispatch(addCarts(product));\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <Grid container>\n          <Grid item xs={12} md={4}>\n            <CardMedia\n              className={classes.media}\n              image={\"https://test.pizzahut1150.com\" + product.image_th}\n              title={product.imagealt_th}\n            />\n          </Grid>\n          <Grid item xs={12} md={8}>\n            <CardContent>\n              <Typography component=\"h3\">{product.product_name_th}</Typography>\n              <LinesEllipsis\n                text={product.product_detail_th}\n                maxLine=\"3\"\n                ellipsis=\"...\"\n                trimRight\n                basedOn=\"letters\"\n              ></LinesEllipsis>\n              <Typography variant=\"subtitle2\">฿ {product.price}</Typography>\n            </CardContent>\n          </Grid>\n        </Grid>\n      </CardActionArea>\n      <CardActions>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          className={classes.floatRight}\n          onClick={() => {\n            addToCart();\n          }}\n        >\n          Add Card\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default List;\n","import React, { useEffect } from \"react\";\nimport useApi from \"../../hooks/useApi\";\nimport productApi from \"../../services/api/productApi\";\n// Material UI\nimport { Grid, Typography } from \"@material-ui/core\";\n//Component\nimport List from \"./list\";\n\ninterface Props {}\n\nconst Index = (props: Props) => {\n  const [products, loading, error, fetchData] = useApi(\n    productApi.getProduct,\n    []\n  );\n\n  // useEffect(() => {\n  //   console.log(products);\n  // }, [products]);\n\n  return (\n    <div>\n      <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n        รายการสินค้า\n      </Typography>\n      {loading ? (\n        <div>fetching...</div>\n      ) : error ? (\n        <div>Fetch Error</div>\n      ) : (\n        <Grid container spacing={2}>\n          {products.map((product, index) => (\n            <Grid item xs={12} sm={6} md={4} key={product.product_id}>\n              <List product={product}></List>\n            </Grid>\n          ))}\n        </Grid>\n      )}\n    </div>\n  );\n};\n\nexport default Index;\n","// React\nimport React from \"react\";\n// Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { ICart } from \"../../interfaces\";\nimport { Grid } from \"@material-ui/core\";\nimport LinesEllipsis from \"react-lines-ellipsis\";\nimport { Provider, useSelector, useDispatch } from \"react-redux\";\nimport { updateCarts, removeCarts } from \"../../store/actions/cartActions\";\n\ninterface Props {\n  cart: ICart;\n}\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 80,\n    backgroundSize: \"contain\",\n  },\n  myCartButton: {\n    minWidth: 40,\n  },\n  myRemoveButton: {\n    minWidth: 40,\n    marginLeft: \"auto\",\n  },\n  floatRight: {\n    marginLeft: \"auto\",\n  },\n});\n\nconst List = (props: Props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const cart = props.cart;\n\n  const increaseCart = () => {\n    if (cart.amount < 9) {\n      const amount = cart.amount++;\n      dispatch(updateCarts(cart.product));\n    }\n  };\n  const decreaseCart = () => {\n    if (cart.amount > 1) {\n      const amount = cart.amount--;\n      dispatch(updateCarts(cart.product));\n    }\n  };\n\n  const removeCart = () => {\n    dispatch(removeCarts(cart.product));\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <Grid container>\n          <Grid item xs={12} md={4}>\n            <CardMedia\n              className={classes.media}\n              image={\"https://test.pizzahut1150.com\" + cart.product.image_th}\n              title={cart.product.imagealt_th}\n            />\n          </Grid>\n          <Grid item xs={12} md={8}>\n            <CardContent>\n              <Typography component=\"h3\">\n                {cart.product.product_name_th} (฿ {cart.product.price}/ชิ้น)\n              </Typography>\n              <Typography variant=\"subtitle2\">\n                Total : ฿ {cart.amount * cart.product.price}\n              </Typography>\n            </CardContent>\n          </Grid>\n        </Grid>\n      </CardActionArea>\n      <Divider />\n      <CardActions>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          className={classes.myCartButton}\n          onClick={() => {\n            decreaseCart();\n          }}\n        >\n          <RemoveCircleIcon></RemoveCircleIcon>\n        </Button>\n        <Typography variant=\"subtitle2\">จำนวน {cart.amount} ชิ้น</Typography>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          className={classes.myCartButton}\n          onClick={() => {\n            increaseCart();\n          }}\n        >\n          <AddCircleIcon></AddCircleIcon>\n        </Button>\n        <Divider orientation=\"vertical\" flexItem />\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          className={classes.myCartButton}\n          onClick={() => {\n            removeCart();\n          }}\n        >\n          <DeleteIcon></DeleteIcon>\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default List;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ICart, IProduct } from \"../../interfaces\";\n// Material UI\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { createStore, combineReducers, Store } from \"redux\";\nimport { Provider, useSelector, useDispatch } from \"react-redux\";\nimport type { AppState } from \"../../store/store\";\n//Component\nimport List from \"./list\";\nimport _ from \"lodash\";\n\ninterface Props {}\n\nconst Index = (props: Props) => {\n  const carts: ICart[] = useSelector((state: AppState) => state.carts);\n\n  useEffect(() => {\n    console.log(\"Cart Update\", carts, carts.length);\n  }, [carts]);\n  return (\n    <div>\n      <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n        ตะกร้าสินค้า\n      </Typography>\n      <Grid container spacing={2}>\n        {carts.length > 0 &&\n          _.orderBy(carts, ['id']).map((cart, index) => (\n            <Grid item xs={12} key={cart.id}>\n              <List cart={cart}></List>\n            </Grid>\n          ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Index;\n","// React\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n// Material UI\nimport { Grid, Container } from \"@material-ui/core\";\n// Component\nimport Product from \"./components/product\";\nimport Cart from \"./components/cart\"\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Container style={{padding: '12px 24px'}}>\n        <Grid container spacing={2}>\n          <Grid item xs={9} style={{borderRight: '1px dashed #ccc'}}>\n            <Product></Product>\n          </Grid>\n          <Grid item xs={3}>\n            <Cart></Cart>\n          </Grid>\n        </Grid>\n      </Container>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}